# Generated by Django 5.0.14 on 2025-10-08 02:20

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("trips", "0002_resort_check_in_time_resort_check_out_time_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Activity",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=200, verbose_name="activity name"),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="description"),
                ),
                ("website_url", models.URLField(blank=True, verbose_name="website")),
                (
                    "address_line1",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="address line 1"
                    ),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="address line 2"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="city"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="state/province"
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="zip/postal code"
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="For future automatic distance calculations",
                        max_digits=9,
                        null=True,
                        verbose_name="latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        help_text="For future automatic distance calculations",
                        max_digits=9,
                        null=True,
                        verbose_name="longitude",
                    ),
                ),
                (
                    "distance_from_resort",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Approximate distance from resort in miles",
                        max_digits=6,
                        null=True,
                        verbose_name="distance from resort (miles)",
                    ),
                ),
                (
                    "estimated_cost",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Estimated cost per person",
                        max_digits=10,
                        null=True,
                        verbose_name="estimated cost",
                    ),
                ),
                (
                    "estimated_duration",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="How long the activity takes",
                        null=True,
                        verbose_name="estimated duration (minutes)",
                    ),
                ),
                (
                    "pre_trip_priority",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Lower numbers = higher priority. 0 = unranked",
                        verbose_name="priority",
                    ),
                ),
                (
                    "post_trip_rating",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Rate 1-5 stars after the trip",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="rating",
                    ),
                ),
                (
                    "post_trip_notes",
                    models.TextField(
                        blank=True,
                        help_text="Reflections, tips, or notes after visiting",
                        verbose_name="post-trip notes",
                    ),
                ),
                (
                    "is_favorite",
                    models.BooleanField(
                        default=False,
                        help_text="Flag activities you would do again",
                        verbose_name="favorite",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_activities",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activities",
                        to="trips.trip",
                        verbose_name="trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "activity",
                "verbose_name_plural": "activities",
                "db_table": "activities",
                "ordering": ["pre_trip_priority", "-created_at"],
                "indexes": [
                    models.Index(
                        fields=["trip", "pre_trip_priority"],
                        name="activities_trip_id_3ed219_idx",
                    ),
                    models.Index(
                        fields=["trip", "post_trip_rating"],
                        name="activities_trip_id_9d1f79_idx",
                    ),
                    models.Index(
                        fields=["trip", "is_favorite"],
                        name="activities_trip_id_9d0cba_idx",
                    ),
                ],
            },
        ),
    ]
