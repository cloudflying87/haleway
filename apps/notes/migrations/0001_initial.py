# Generated by Django 5.0.14 on 2025-10-08 01:32

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("trips", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="NoteCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="e.g., Transportation, Food Restrictions, Emergency Contacts",
                        max_length=100,
                        verbose_name="category name",
                    ),
                ),
                (
                    "color_code",
                    models.CharField(
                        choices=[
                            ("#2E86AB", "Ocean Blue"),
                            ("#FF6B6B", "Sunset Coral"),
                            ("#06A77D", "Palm Green"),
                            ("#F4E8C1", "Sandy Beige"),
                            ("#9B59B6", "Purple"),
                            ("#E67E22", "Orange"),
                            ("#3498DB", "Sky Blue"),
                            ("#E74C3C", "Red"),
                        ],
                        default="#2E86AB",
                        help_text="Hex color for UI organization",
                        max_length=7,
                        verbose_name="color",
                    ),
                ),
                (
                    "order",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Lower numbers appear first",
                        verbose_name="display order",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="note_categories",
                        to="trips.trip",
                        verbose_name="trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "note category",
                "verbose_name_plural": "note categories",
                "db_table": "note_categories",
                "ordering": ["order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="title")),
                ("content", models.TextField(verbose_name="content")),
                (
                    "is_pinned",
                    models.BooleanField(
                        default=False,
                        help_text="Pin important notes to the top",
                        verbose_name="pinned",
                    ),
                ),
                (
                    "search_vector",
                    django.contrib.postgres.search.SearchVectorField(
                        blank=True, null=True
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_notes",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="trips.trip",
                        verbose_name="trip",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notes",
                        to="notes.notecategory",
                        verbose_name="category",
                    ),
                ),
            ],
            options={
                "verbose_name": "note",
                "verbose_name_plural": "notes",
                "db_table": "notes",
                "ordering": ["-is_pinned", "-updated_at"],
            },
        ),
        migrations.AddIndex(
            model_name="notecategory",
            index=models.Index(
                fields=["trip", "order"], name="note_catego_trip_id_e097cf_idx"
            ),
        ),
        migrations.AddConstraint(
            model_name="notecategory",
            constraint=models.UniqueConstraint(
                fields=("trip", "name"), name="unique_category_per_trip"
            ),
        ),
        migrations.AddIndex(
            model_name="note",
            index=models.Index(
                fields=["trip", "category"], name="notes_trip_id_2e8a4f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="note",
            index=models.Index(
                fields=["trip", "is_pinned"], name="notes_trip_id_ad5341_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="note",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["search_vector"], name="notes_search__03615f_gin"
            ),
        ),
    ]
