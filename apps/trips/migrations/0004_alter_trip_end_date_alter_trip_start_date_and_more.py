# Generated by Django 5.0.14 on 2025-10-10 00:23

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("families", "0001_initial"),
        ("trips", "0003_add_dream_trip_status"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="trip",
            name="end_date",
            field=models.DateField(
                blank=True,
                help_text="Optional for dream trips",
                null=True,
                verbose_name="end date",
            ),
        ),
        migrations.AlterField(
            model_name="trip",
            name="start_date",
            field=models.DateField(
                blank=True,
                help_text="Optional for dream trips",
                null=True,
                verbose_name="start date",
            ),
        ),
        migrations.CreateModel(
            name="ResortWishlist",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="resort name")),
                (
                    "destination",
                    models.CharField(
                        help_text="e.g., Maui, Paris, Tokyo",
                        max_length=200,
                        verbose_name="destination",
                    ),
                ),
                ("website_url", models.URLField(blank=True, verbose_name="website")),
                (
                    "address_line1",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="address line 1"
                    ),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="address line 2"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="city"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="state/province"
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="zip/postal code"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="USA", max_length=100, verbose_name="country"
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="longitude",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Why we want to visit this resort",
                        verbose_name="description",
                    ),
                ),
                (
                    "estimated_cost_per_night",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="estimated cost per night",
                    ),
                ),
                (
                    "tags",
                    models.CharField(
                        blank=True,
                        help_text="Comma-separated tags: beach, luxury, family-friendly, all-inclusive",
                        max_length=500,
                        verbose_name="tags",
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Research notes, recommendations",
                        verbose_name="notes",
                    ),
                ),
                (
                    "is_favorite",
                    models.BooleanField(default=False, verbose_name="favorite"),
                ),
                ("visited", models.BooleanField(default=False, verbose_name="visited")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="added_resorts",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="added by",
                    ),
                ),
                (
                    "family",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resort_wishlist",
                        to="families.family",
                        verbose_name="family",
                    ),
                ),
                (
                    "visited_trip",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="visited_resorts",
                        to="trips.trip",
                        verbose_name="visited on trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "resort wishlist item",
                "verbose_name_plural": "resort wishlist",
                "db_table": "resort_wishlist",
                "ordering": ["-is_favorite", "destination", "name"],
                "indexes": [
                    models.Index(
                        fields=["family", "is_favorite"],
                        name="resort_wish_family__c6a2af_idx",
                    ),
                    models.Index(
                        fields=["family", "visited"],
                        name="resort_wish_family__9fef19_idx",
                    ),
                    models.Index(
                        fields=["family", "destination"],
                        name="resort_wish_family__f09cd7_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="TripResortOption",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, verbose_name="resort name")),
                ("website_url", models.URLField(blank=True, verbose_name="website")),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="phone number"
                    ),
                ),
                (
                    "address_line1",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="address line 1"
                    ),
                ),
                (
                    "address_line2",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="address line 2"
                    ),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="city"),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="state/province"
                    ),
                ),
                (
                    "zip_code",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="zip/postal code"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        default="USA", max_length=100, verbose_name="country"
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="latitude",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="longitude",
                    ),
                ),
                (
                    "estimated_cost_per_night",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="estimated cost per night",
                    ),
                ),
                (
                    "pros",
                    models.TextField(
                        blank=True,
                        help_text="What's good about this resort",
                        verbose_name="pros",
                    ),
                ),
                (
                    "cons",
                    models.TextField(
                        blank=True,
                        help_text="Concerns or drawbacks",
                        verbose_name="cons",
                    ),
                ),
                (
                    "rating",
                    models.IntegerField(
                        blank=True,
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")],
                        help_text="Preliminary rating (1-5)",
                        null=True,
                        verbose_name="rating",
                    ),
                ),
                (
                    "is_preferred",
                    models.BooleanField(
                        default=False,
                        help_text="Mark as favorite option",
                        verbose_name="preferred option",
                    ),
                ),
                ("order", models.IntegerField(default=0, verbose_name="display order")),
                ("general_notes", models.TextField(blank=True, verbose_name="notes")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="updated at"),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="resort_options",
                        to="trips.trip",
                        verbose_name="trip",
                    ),
                ),
            ],
            options={
                "verbose_name": "resort option",
                "verbose_name_plural": "resort options",
                "db_table": "trip_resort_options",
                "ordering": ["order", "-is_preferred", "name"],
                "indexes": [
                    models.Index(
                        fields=["trip", "order"], name="trip_resort_trip_id_d1855e_idx"
                    ),
                    models.Index(
                        fields=["trip", "is_preferred"],
                        name="trip_resort_trip_id_688f1b_idx",
                    ),
                ],
            },
        ),
    ]
